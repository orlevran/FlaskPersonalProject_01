"""
@app.route('/')
def home():
    return "Hello world"

@app.get("/cars")
def get_cars():
    try:
        return {"cars" : list(cars.values())}
    except Exception as e:
        return jsonify({"error": str(e)}), 400

@app.get("/cars/<string:car_id>")
def get_car_by_id(car_id):
    try:
        return cars[car_id], 200
    except KeyError:
        return {"message": "Car not found"}, 404
    except Exception as e:
        return jsonify({"error": str(e)}), 400


@app.get("/car")
def get_car():
    try:
        request_data = request.get_json()
        car_id = request_data["_id"]
        return cars[car_id], 201
    except KeyError:
        return {"message" : "Car not found"}, 404
    except Exception as e:
        return jsonify({"error": str(e)}), 400

@app.post("/cars")
def create_car():
    try:
        request_data = request.get_json()
        new_car = CarItem(
        make=request_data["make"],
        model=request_data["model"],
        year=request_data["year"],
        engine=request_data["engine"],
        transmission=request_data["transmission"],
        fuel_efficiency=request_data["fuel_efficiency"],
        dimensions=request_data["dimensions"],
        features=request_data["features"],
        price=request_data["price"]
        )

        cars[str(new_car._id)] = {**new_car.to_dict()}
        return jsonify(new_car.to_dict()), 201
    
    except Exception as e:
        return jsonify({"error": str(e)}), 400
    

@app.delete("/car")
def delete_car():
    try:
        request_data = request.get_json()
        car_id = request_data["_id"]
        del cars[car_id]
        return {"message" : f"Car {car_id} deleted"}
    except KeyError:
        abort(404, message="Car not found")

@app.delete("/cars/<string:car_id>")
def delet_car_by_id(car_id):
    try:
        del cars[car_id]
        return {"message" : f"Car {car_id} deleted"}
    except KeyError:
        abort(404, message="Car not found")

@app.put("/car")
def update_car():
    try:
        request_data = request.get_json()
        car_id = request_data["_id"]
        car = cars[car_id]
        car |= request_data
        cars[car_id] = car
        return car
    except KeyError as ke:
        abort(404, str(ke))

@app.put("/cars/<string:car_id>")
def update_car_by_id(car_id):
    try:
        request_data = request.get_json()
        car = cars[car_id]
        car |= request_data
        cars[car_id] = car
        return car
    except KeyError as ke:
        abort(404, str(ke))
"""